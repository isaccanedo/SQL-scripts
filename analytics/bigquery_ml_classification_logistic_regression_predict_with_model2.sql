--
--  Author: Hari Sekhon
--  Date: 2020-09-06 10:05:48 +0100 (Sun, 06 Sep 2020)
--
--  vim:ts=2:sts=2:sw=2:et:filetype=sql
--
--  https://github.com/harisekhon/sql
--
--  License: see accompanying Hari Sekhon LICENSE file
--
--  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help steer this or other code I publish
--
--  https://www.linkedin.com/in/harisekhon
--

-- use the improved model 2 to predict which users will buy on return visit

SELECT
  *
FROM
  ml.PREDICT(
    MODEL `ecommerce.classification_model_2`, (

      WITH all_visitor_stats AS (
      SELECT
        fullvisitorid,
        IF(COUNTIF(totals.transactions > 0 AND totals.newVisits IS NULL) > 0, 1, 0) AS will_buy_on_return_visit
        FROM `data-to-insights.ecommerce.web_analytics`
        GROUP BY fullvisitorid
      )

      SELECT
        CONCAT(fullvisitorid, '-',CAST(visitId AS STRING)) AS unique_session_id,

        -- labels
        will_buy_on_return_visit,

        MAX(CAST(h.eCommerceAction.action_type AS INT64)) AS latest_ecommerce_progress,

        -- behavior on the site
        IFNULL(totals.bounces, 0) AS bounces,
        IFNULL(totals.timeOnSite, 0) AS time_on_site,
        totals.pageviews,

        -- where the visitor came from
        trafficSource.source,
        trafficSource.medium,
        channelGrouping,

        -- mobile or desktop
        device.deviceCategory,

        -- geographic
        IFNULL(geoNetwork.country, "") AS country

        FROM
          `data-to-insights.ecommerce.web_analytics`,
        UNNEST(hits) AS h

        JOIN
          all_visitor_stats
        USING
          (fullvisitorid)

        WHERE
          -- only predict for new visits
          totals.newVisits = 1
          -- test on a non-overlapping subset to the training data
          AND date BETWEEN '20170701' AND '20170801'

        GROUP BY
          unique_session_id,
          will_buy_on_return_visit,
          bounces,
          time_on_site,
          totals.pageviews,
          trafficSource.source,
          trafficSource.medium,
          channelGrouping,
          device.deviceCategory,
          country
    )
  )

ORDER BY
  -- your label name will be prefixed with 'predicted_' for the field generated by the model
  predicted_will_buy_on_return_visit DESC;
